[[plugins]]
repo = 'Shougo/vimproc'
build = 'make'

[[plugins]] repo = 'scrooloose/nerdtree'
hook_add = '''
  noremap <C-e> :NERDTreeToggle<CR>
  filetype plugin indent on
'''
on_i = 1

[[plugins]]
repo = 'Shougo/deoplete.nvim'
on_event = 'InsertEnter'
hook_add = '''
  let g:deoplete#enable_at_startup   = 1
  inoremap <expr><TAB>  pumvisible() ? "\<C-n>" : "\<TAB>"
  set completeopt=menuone
'''
on_i = 1

[[plugins]]
repo = 'tpope/vim-surround'
on_i = 1

[[plugins]]
repo = 'tomtom/tcomment_vim'
on_i = 1

[[plugins]]
repo = 'junegunn/vim-easy-align'
on_i = 1

[[plugins]]
repo = 'terryma/vim-multiple-cursors'
hook_source = '''
func! Multiple_cursors_before()
  if deoplete#is_enabled()
    call deoplete#disable()
    let g:deoplete_is_enable_before_multi_cursors = 1
  else
    let g:deoplete_is_enable_before_multi_cursors = 0
  endif
endfunc
func! Multiple_cursors_after()
  if g:deoplete_is_enable_before_multi_cursors
    call deoplete#enable()
  endif
endfunc
'''
on_i = 1

[[plugins]]
repo = 'mattn/emmet-vim'

[[plugins]]
repo = 'elzr/vim-json'
hook_source = '''
  let g:vim_json_syntax_conceal = 0
'''
on_i = 1

[[plugins]]
repo = 'Konfekt/FastFold'
on_i = 1

[[plugins]]
repo = 'Konfekt/FoldText'
on_i = 1

[[plugins]]
repo = 'posva/vim-vue'
on_ft = ['js','vue']
on_i = 1

[[plugins]]
repo = 'rust-lang/rust.vim'
on_ft = 'rust'
hook_source = '''
  let g:rustfmt_autosave = 0
'''
on_i = 1

[[plugins]]
repo = 'racer-rust/vim-racer'
on_ft = 'rust'
hook_source = '''
  let g:racer_cmd = "~/.cargo/bin/racer"
  let g:racer_experimental_completer = 1
  let $RUST_SRC_PATH="{/Users/naka/.rustup/toolchains/stable-x86_64-apple-darwin/lib/rustlib/src/rust/src/ }"
'''
on_i = 1

[[plugins]]
on_ft = 'typescript'
repo = 'jason0x43/vim-js-indent'
on_i = 1

[[plugins]]
on_ft = 'typescript'
repo = 'mhartington/nvim-typescript'
on_i = 1

[[plugins]] repo = 'kamykn/spelunker.vim'
hook_add = '''
  set nospell
  let g:enable_spelunker_vim = 1
'''
on_i = 1

[[plugins]]
repo = 'fatih/vim-go'
hook_add = '''
  let g:go_fmt_autosave = 0
  "let g:go_fmt_command = "goimports"
  let g:go_highlight_types = 1
  let g:go_highlight_fields = 1
  let g:go_highlight_function_calls = 1
  
  " disable functions for LSP
  let g:go_def_mapping_enabled = 0
  let g:go_doc_keywordprg_enabled = 0
'''
on_ft = ['go']

[[plugins]]
repo = 'AndrewRadev/splitjoin.vim'
on_i = 1

[[plugins]]
repo = 'SirVer/ultisnips'
hook_add = '''
  let g:UltiSnipsExpandTrigger="<c-k>"
'''
on_i = 1

[[plugins]]
repo = 'w0rp/ale'
hook_add = '''
  let g:ale_lint_on_save = 1
  let g:ale_lint_on_text_changed = 0
  let g:ale_completion_enabled = 0
  let g:ale_lint_on_enter = 1

  let g:ale_sign_error = '>>'
  let g:ale_sign_warning = '--'
  highlight clear ALEErrorSign
  highlight clear ALEWarningSign

  let g:ale_linters = {
    \ 'go': ['golint', 'go vet'],
    \ 'python': ['flake8'],
  \}

  let g:ale_fixers = {
  \ 'go': ['gofmt', 'goimports'],
  \ 'python': ['autopep8', 'black', 'isort'],
  \}
  let g:ale_fix_on_save = 1

  " nmap <silent> <C-k> <Plug>(ale_previous_wrap)
  " nmap <silent> <C-j> <Plug>(ale_next_wrap)
'''
on_i = 1

[[plugins]]
repo = 'autozimu/LanguageClient-neovim'
build = 'bash install.sh'
rev = 'next'
hook_add = '''
  set hidden
  let g:LanguageClient_diagnosticsEnable = 0
  let g:LanguageClient_serverCommands = {
    \ 'go': ['gopls'],
    \ 'python': ['/usr/local/bin/pyls'],
  \ }
  let g:LanguageClient_loadSettings = 1
  nnoremap <silent> K :call LanguageClient#textDocument_hover()<CR>
  nnoremap <silent> <C-]> :call LanguageClient#textDocument_definition()<CR>
  autocmd BufWritePre *.go :call LanguageClient#textDocument_formatting_sync()
'''
on_i = 1

[[plugins]]
repo = 'junegunn/fzf'
build = './install -all'

[[plugins]]
repo = 'junegunn/fzf.vim'
depends = 'fzf'
